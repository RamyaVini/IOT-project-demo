apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
type: Opaque
stringData:
  POSTGRES_USER: iotuser
  POSTGRES_PASSWORD: iotpass
  POSTGRES_DB: iotdb
  POSTGRES_HOST: postgres
  POSTGRES_PORT: "5432"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-initdb
data:
  init.sql: |
    -- Ensure the database exists
    CREATE DATABASE iotdb;
    -- Ensure user exists (idempotent)
    DO
    $do$
    BEGIN
       IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'iotuser') THEN
          CREATE ROLE iotuser LOGIN PASSWORD 'iotpass';
       END IF;
    END
    $do$;
    -- Ensure privileges
    GRANT ALL PRIVILEGES ON DATABASE iotdb TO iotuser;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          envFrom:
            - secretRef:
                name: postgres-secret
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: postgres-storage
          emptyDir: {}   # replace with PVC in production
        - name: initdb
          configMap:
            name: postgres-initdb
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgres

